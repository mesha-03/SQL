#'m requesting statistics on customer and order data from a database that has several tables using this SQL query.


#Shows orders placed in January
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';


#Shows how many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';


#Shows the customer account numbers for all the orders that were placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
On customers.order_id = FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';


#Shows the cheapest product sold in January and the price.
SELECT distinct product, min(price)
FROM BIT_DB.JanSales
GROUP BY product;



#Shows products that were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and the total revenue.

SELECT sum(Quantity),product, sum(quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'; 


SELECT SUM(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%'


--'like' searches the column you give it for the values you type in after like.--
--'%' tells the SQL code that you are searching for a value that can match anything.--
-- orderdate comes in the format MM/DD/YY HH:MM --
-- To only select orderdate when it starts with 02/18/19, but then anything can come after that. --
-- To select orderdate wherever it starts with 02/18/19, no matter what the time (HH:MM) was.--
--You can use LIKE for any kind of data, not just dates. --
--And you can add the % to the front, end, or both sides of the value you're searching for. -- 



-- List all the products sold in Los Angeles in February, and include how many of each were sold.--
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;


SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Price like '%.99';


--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?--
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid)=6
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID) > 2;

--How many of each type of headphone were sold in February?--

SELECT SUM(Quantity) AS Quantity, Product
FROM BIT_DB.FebSales
WHERE product like '%Headphones%'
Group BY product;

--What was the average amount spent per account in February? --

SELECT AVG(quantity * price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON Febsales.orderid = customers.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February?-- 

SELECT AVG(quantity * price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON Febsales.orderid = customers.order_id
AND orderid <> 'Order ID';


--Which product brought in the most revenue in January and how much revenue did it bring in total?--

SELECT sum(quantity),price, sum(quantity*price) AS revenue,product 
FROM BIT_DB.JanSales
GROUP BY product;
